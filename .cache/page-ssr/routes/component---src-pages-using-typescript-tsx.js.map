{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `2rem`,\n          }}\n        >\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","title","site","buildTime","href","to","query","PropTypes","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","color","textDecoration","propTypes","string","defaultProps","useStaticQuery","children","siteMetadata","marginTop","Date","getFullYear","node","isRequired","Helmet","description","lang","meta","metaDescription","defaultTitle","name","content","property","author","concat","arrayOf","object"],"sourceRoot":""}